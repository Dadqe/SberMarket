Смотрю из примера ход работы в search_chipest_product copy.py
13 стр. Создаю Объект класса Client, что б использовать его методы
15 стр. Получаю все магазины, которые доступны для доставки. Надо передать широту и долготу. Я брал из браузера, где-то откопал в запросах нашёл. shiping_method = 'delivery', тип те магазины, которые могут доставку мне сделать. Stores - list с объектами класса Store. В каждом объекте хранится каждый магазин, перегружен метод __repr__, что б элемент представлялся по-человечески. Но по индексу можно спокойно обращаться к локальным атрибутам
Сначала попробую получить информацию о тех категориях товара, которые есть в магазине, в любом(Начну с первого в списке)




Мне нужно брать один магазин, заходить в него, там по store_id его, заходить в продукты, смотреть какие категории есть, заходить в каждую категорию (для начала заходить в одну, где возле кассы, например, или что-нибудь для животных, просто парсить. Сначала стучаться в response.json()['meta']), оттуда парсить инфу о том, сколько всего товаров, сколько страниц, исходя из этого, формировать другой гет запрос, в котором я сделаю так, что б можно было запарсить все товары разом (или переходить по страницам, узнать, сколько максимум товаров можно будет на одной странице запросить и всё это дело проверять), сразу же проводить какие-нибудь вычисления на счёт размера скидки, видимо в процентах (можно поискать, мб формула уже специальная есть, что б не мудрить ничего самому). И закидывать от нужного процента товар в словарь, скорее всего, где название будет ключом, а значение другим словарём с остальной инфой, потом это в виде json файла сохранить, после чего распарсить это и сохранять в табличку под нужными столбцами и строками. Примерная работа есть у Python_Today, можно будет глянуть, там сверху ещё и ТГ бот. И подобное проделывать с каждым магазином... МБ сранивать товары по названию ещё и что-либо делать

Найти в этих модулях, мб в каком-то из классов есть полезные методы, что б стучаться в магазин и сразу по сформированной ссылке перебегать


Мне надо снова эмулировать бразузер в селениуме, посмотреть, какие запросы происходят в нём, какие данные он получает при тех или иных запросах и заходах на страницы,  https://sbermarket.ru/api/stores/699/products
а в браузере такая ссылка https://sbermarket.ru/stores/699

From selenium: https://sbermarket.ru/lenta/c/priedlozhieniia/skidki/ovoshchi-frukti-orekhi?sid=699&source=category
From scraP: https://sbermarket.ru/api/stores/699/products

From browser при триггере пагинации
Request URL: https://sbermarket.ru/api/v3/stores/699/departments/ovoshchi-frukti-orekhi?offers_limit=10&page=2&per_page=3

in test.py есть запрос сформированный, он проходит при выполнении, надо сделать по аналогии, может где-то что-то съехало, мне кажется URL уже какие-то другие стали, т.к. в тесте https://sbermarket.ru/api/v3/stores/699/products


Было отличие в урл, после чего я исправил урл именно для функции scrap_one_category и всё сохранилось